/*eslint-env mocha*/
/*eslint-disable strict, no-console*/

var assert = require('assert');

describe('wrong usage', function(){
  var nbs = require('../index'), wait = nbs.wait, resume = nbs.resume;

  var asyncStackError = /cannot wait in async stack\(do NOT ignore this error!\)/;

  beforeEach(function(){
    nbs.resetConfig();
  });

  it('should not use wait in the async stack', function(done){
    nbs.run(function(){
      setTimeout(function(){
        setTimeout(function(){
          resume();
        }, 100);

        assert.throws(function(){
          wait();
        }, asyncStackError);
        
        done();
      });
    }, done);
  });


  it('should break the fiber stack when resume from the async stack', function(done){
    //ATTENTION! do NOT use wait in the async stack, this example will show you the bad effect!!!
    nbs.run(function(){
      setTimeout(function(){
        setTimeout(function(){
          resume();//it will resume the last wait
        }, 100);

        assert.throws(function(){
          wait();
        }, asyncStackError);
      });

      setTimeout(resume, 50);
      wait();

      wait();//it will not block!
      done();
    }, done);
  });
});