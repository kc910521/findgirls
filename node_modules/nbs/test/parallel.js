/*eslint-env mocha*/
/*eslint-disable strict, no-console*/

var assert = require('assert');

describe('parallel', function(){
  var nbs = require('../index'), wait = nbs.wait, resume = nbs.resume;

  beforeEach(function(){
    nbs.resetConfig();
  });
  
  it('should not disturb each other with multiple parallel fiber stacks', function(done){
    var pending = 2;
    function got(){
      if(!--pending) done();
    }

    nbs.run(function(){
      setTimeout(function(){
        setTimeout(function(){
          resume(null, 1);
        }, 0);
      }, 0);
      var ret = wait();

      assert.equal(ret, 1);
      got();
    }, done);
    nbs.run(function(){
      setTimeout(function(){
        setTimeout(function(){
          resume(null, 3);
        }, 100);
      }, 100);
      var ret = wait();

      assert.equal(ret, 3);
      got();
    }, done);
  });

  it('should parallel run with multiple wait/resume groups', function(done){
    nbs.run(function(){
      var now = Date.now();
      setTimeout(function(){
        resume(null, 1);
      }, 100);
      setTimeout(function(){
        resume(null, 2);
      }, 100);
      setTimeout(function(){
        resume(null, 3);
      }, 100);
      var ret1 = wait();
      var ret2 = wait();
      var ret3 = wait();
      var el = Date.now()-now;

      assert.equal(ret1+ret2+ret3, 6);
      assert(el<130);
      done();
    }, done);
  });

});