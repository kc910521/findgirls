/*eslint-env mocha*/
/*eslint-disable strict, no-console*/

var assert = require('assert');

describe('bind emitter', function(){
  var nbs = require('../index'), wait = nbs.wait, resume = nbs.resume;

  beforeEach(function(){
    nbs.resetConfig();
  });
  
  it('should bind the event emitter', function(done){
    process.domain && process.domain.exit();

    var domainId;
    var e = new (require('events').EventEmitter)();
    assert.equal(process.domain, null);
    assert.equal(e.domain, null);

    e.on('hello', function(){
      assert.equal(process.domain.id(), domainId);
      done();
    });

    nbs.run(function(){
      domainId = process.domain.id();
      setTimeout(function(){
        resume();
      }, 0);
      wait();
      setTimeout(function(){
        e.emit('hello');
      });
      assert(e.domain!==null);
    }, e, done);
  });

  it('should bind the non event emitter', function(done){
    process.domain && process.domain.exit();

    var a = 11;

    nbs.run(function(){
      assert.equal(process.domain.members.length, 1);
      assert.equal(process.domain.members[0], 11);
      done();
    }, a, done);
  });


});