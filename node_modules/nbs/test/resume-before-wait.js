/*eslint-env mocha*/
/*eslint-disable strict, no-console*/

var assert = require('assert');

describe('resume before wait', function(){
  var nbs = require('../index'), wait = nbs.wait, resume = nbs.resume;

  beforeEach(function(){
    nbs.resetConfig();
  });

  it('should hung when resume before wait without explicit pair', function(done){
    setTimeout(done, 500);

    var outer = 1;
    function syncCallbackFunc(cb){
      cb(null, 1, new Error('async function error'));
    }
    nbs.run(function(){
      assert.equal(outer, 1);
      syncCallbackFunc(function(){
        outer = 2;
        resume.apply(null, arguments);
      });
      assert.equal(outer, 2);
      wait();
      done(new Error('should not done here'));
    }, function(){});
  });
  
  it('should not hung the fiber stack when run resume before wait in a sync callback', function(done){
    var outer = 1;
    function syncCallbackFunc(cb){
      cb(null, 1, new Error('async function error'));
    }
    nbs.run(function(){
      assert.equal(outer, 1);
      var pair = nbs.pair();
      syncCallbackFunc(function(){
        outer = 2;
        pair.resume.apply(pair, arguments);
      });
      assert.equal(outer, 2);
      var ret = pair.wait();

      assert.equal(outer, 2);
      assert.equal(ret[0], 1);
      assert(ret[1] instanceof Error);
      done();
    }, done);
    
  });

});